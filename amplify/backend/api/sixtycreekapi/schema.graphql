type schema {
  query: Query
  mutation: Mutation
}

type Query{
  user(id: ID): User
  prospectList: ProspectList
  prospect: Prospect
  paymentMethod: PaymentMethod
  marketingCampaign: MarketingCampaign
}

type Mutation{
  user(id: ID, firstName: String, lastName: String, company: String, address1: String, address2: String, city: String, state: String, zip: String, phone: String, email: String, signature: String): User
  prospectList(id: ID, name: String, owningUserId: Int): ProspectList
  prospect(id: ID, prospectListId: Int,  firstName: String,  lastName: String, company: String, address1: String,  address2: String, city: String,  state: String,  zip: String,  phone: String,  email: String,  facebook: String, owningUserId: Int): Prospect
  paymentMethod(id: ID,  userId: Int, title: String, stripeInfo: String, name: String, email: String,  phone: String): PaymentMethod
  marketingCampaign(id: ID, title: String, prospectListId: Int, startDateTime: String, autmatedEmail: Boolean, automatedText: Boolean, automatedRinglessVoiceMail: Boolean, automatedPostcard: Boolean, paymentMethodId: Int, consent: Boolean, owningUserId: Int): MarketingCampaign
  deletedUser(id: ID!): User
  deletedProspectLists(id: ID!): ProspectList
  deletedProspect(id: ID!): Prospect
  deletedPaymentMethod(id: ID!): PaymentMethod
  deletedMarketingCampaign(id: ID!): MarketingCampaign
}

type User @model @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  cognitoUserName: String!
  firstName: String
  lastName: String
  company: String
  address1: String
  address2: String
  city: String
  state: String
  zip: String
  phone: String
  email: String
  signature: String
}

type ProspectList @model @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  name: String
  owningUserId: Int
  prospects: [Prospect]
}

type Prospect @model @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  status: String
  prospectListId: Int
  firstName: String
  lastName: String
  company: String
  address1: String
  address2: String
  city: String
  state: String
  zip: String
  phone: String
  email: String
  facebook: String
  owningUserId: Int
}

type PaymentMethod @model @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  userId: Int
  title: String
  stripeInfo: String
  name: String
  email: String
  phone: String
}

type MarketingCampaign @model @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  title: String
  prospectListId: Int
  startDateTime: String
  autmatedEmail: Boolean
  automatedText: Boolean
  automatedRinglessVoiceMail: Boolean
  automatedPostcard: Boolean
  paymentMethodId: Int
  consent: Boolean
  owningUserId: Int
}